@model IEnumerable<WebApplication1.Models.SpecialLink>

@{
    ViewData["Title"] = "Special Links Manager";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">
                <i class="fa fa-link"></i> Special Links Manager
            </h1>
        </div>
    </div>

    <!-- Add New Links Form -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fa fa-plus"></i> Add New Links
                    </h4>
                </div>
                <div class="card-body">
                    <form id="linksForm">
                        <div id="linksContainer">
                            <div class="link-input-item mb-4 p-4 border rounded bg-light">
                                <div class="link-set-header mb-3">
                                    <h6 class="text-primary mb-0">
                                        <i class="fa fa-link"></i> Link Set #1
                                    </h6>
                                    <hr class="my-2">
                                </div>
                                <div class="row">
                                    <div class="col-12 mb-3">
                                        <label for="title_0" class="form-label">Title:</label>
                                        <input type="text" class="form-control" id="title_0" name="links[0].Title" placeholder="Enter link title" required>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label for="url_0" class="form-label">URL:</label>
                                        <input type="url" class="form-control" id="url_0" name="links[0].Url" placeholder="https://example.com" required>
                                    </div>
                                    <div class="col-12 text-right">
                                        <button type="button" class="btn btn-danger btn-sm remove-link" style="display: none;">
                                            <i class="fa fa-trash"></i> Remove Set
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row mt-3">
                            <div class="col-12">
                                <button type="button" class="btn btn-success" id="addMoreBtn">
                                    <i class="fa fa-plus"></i> Add More
                                </button>
                                <button type="submit" class="btn btn-primary ml-2">
                                    <i class="fa fa-save"></i> Submit Links
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Existing Links Display -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fa fa-list"></i> Existing Links
                    </h4>
                </div>
                <div class="card-body">
                    <div id="linksList">
                        <div class="text-center">
                            <i class="fa fa-spinner fa-spin fa-2x"></i>
                            <p>Loading links...</p>
                        </div>
                    </div>
                    
                    <!-- Pagination Controls -->
                    <div id="paginationControls" class="mt-4" style="display: none;">
                        <nav aria-label="Links pagination">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="pagination-info">
                                    <small class="text-muted" id="paginationInfo"></small>
                                </div>
                                <ul class="pagination pagination-sm mb-0" id="paginationNav">
                                    <!-- Pagination items will be generated by JavaScript -->
                                </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fa fa-check-circle text-success"></i> Success
                </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="successMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Error Modal -->
<div class="modal fade" id="errorModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fa fa-exclamation-circle text-danger"></i> Error
                </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="errorMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let linkCounter = 0;

        let currentPage = 1;
        const pageSize = 5;

        $(document).ready(function() {
            // Load existing links on page load
            loadExistingLinks(currentPage);

            // Add more link button
            $('#addMoreBtn').click(function() {
                addNewLinkItem();
            });

            // Remove link button (using event delegation)
            $(document).on('click', '.remove-link', function() {
                $(this).closest('.link-input-item').remove();
                updateRemoveButtons();
            });

            // Form submission
            $('#linksForm').submit(function(e) {
                e.preventDefault();
                submitLinks();
            });

            // Pagination click handler
            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                const page = $(this).data('page');
                if (page && page !== currentPage) {
                    loadExistingLinks(page);
                }
            });
        });

        function addNewLinkItem() {
            linkCounter++;
            const setNumber = linkCounter + 1;
            const newItem = `
                <div class="link-input-item mb-4 p-4 border rounded bg-light">
                    <div class="link-set-header mb-3">
                        <h6 class="text-primary mb-0">
                            <i class="fa fa-link"></i> Link Set #${setNumber}
                        </h6>
                        <hr class="my-2">
                    </div>
                    <div class="row">
                        <div class="col-12 mb-3">
                            <label for="title_${linkCounter}" class="form-label">Title:</label>
                            <input type="text" class="form-control" id="title_${linkCounter}" name="links[${linkCounter}].Title" placeholder="Enter link title" required>
                        </div>
                        <div class="col-12 mb-3">
                            <label for="url_${linkCounter}" class="form-label">URL:</label>
                            <input type="url" class="form-control" id="url_${linkCounter}" name="links[${linkCounter}].Url" placeholder="https://example.com" required>
                        </div>
                        <div class="col-12 text-right">
                            <button type="button" class="btn btn-danger btn-sm remove-link">
                                <i class="fa fa-trash"></i> Remove Set
                            </button>
                        </div>
                    </div>
                </div>
            `;
            $('#linksContainer').append(newItem);
            updateRemoveButtons();
        }

        function updateRemoveButtons() {
            const linkItems = $('.link-input-item');
            if (linkItems.length > 1) {
                $('.remove-link').show();
            } else {
                $('.remove-link').hide();
            }
        }

        function loadExistingLinks(page = 1) {
            currentPage = page;
            $('#linksList').html(`
                <div class="text-center">
                    <i class="fa fa-spinner fa-spin fa-2x"></i>
                    <p>Loading links...</p>
                </div>
            `);

            $.ajax({
                url: '/SpecialLinks/GetLinks',
                type: 'GET',
                data: { page: page, pageSize: pageSize },
                success: function(response) {
                    if (response.success === false) {
                        $('#linksList').html(`
                            <div class="alert alert-danger">
                                <i class="fa fa-exclamation-triangle"></i> ${response.message}
                            </div>
                        `);
                        return;
                    }
                    
                    displayLinks(response.links);
                    updatePagination(response.pagination);
                },
                error: function() {
                    $('#linksList').html(`
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-triangle"></i> Error loading links. Please try again.
                        </div>
                    `);
                }
            });
        }

        function displayLinks(links) {
            if (links.length === 0) {
                $('#linksList').html(`
                    <div class="text-center text-muted">
                        <i class="fa fa-link fa-3x mb-3"></i>
                        <p>No links found. Add some links using the form above.</p>
                    </div>
                `);
                $('#paginationControls').hide();
                return;
            }

            let html = '';
            links.forEach(function(link, index) {
                const globalIndex = (currentPage - 1) * pageSize + index + 1;
                html += `
                    <div class="link-item mb-4 p-4 border rounded bg-light">
                        <div class="link-set-header mb-3">
                            <h6 class="text-success mb-0">
                                <i class="fa fa-save"></i> Saved Link Set #${globalIndex}
                            </h6>
                            <hr class="my-2">
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <label class="form-label">Title:</label>
                                <input type="text" class="form-control" value="${escapeHtml(link.title)}" readonly>
                            </div>
                            <div class="col-12 mb-3">
                                <label class="form-label">URL:</label>
                                <input type="url" class="form-control" value="${escapeHtml(link.url)}" readonly>
                            </div>
                            <div class="col-12">
                                <small class="text-muted">
                                    <i class="fa fa-calendar"></i> Created: ${new Date(link.createdAt).toLocaleDateString()}
                                    <span class="ml-3">
                                        <a href="${escapeHtml(link.url)}" target="_blank" class="text-primary">
                                            <i class="fa fa-external-link"></i> Open Link
                                        </a>
                                    </span>
                                </small>
                            </div>
                        </div>
                    </div>
                `;
            });

            $('#linksList').html(html);
        }

        function updatePagination(pagination) {
            if (pagination.totalPages <= 1) {
                $('#paginationControls').hide();
                return;
            }

            $('#paginationControls').show();
            
            // Update pagination info
            const startItem = (pagination.currentPage - 1) * pagination.pageSize + 1;
            const endItem = Math.min(pagination.currentPage * pagination.pageSize, pagination.totalCount);
            $('#paginationInfo').text(`Showing ${startItem}-${endItem} of ${pagination.totalCount} links`);

            // Generate pagination nav
            let navHtml = '';
            
            // Previous button
            if (pagination.hasPrevious) {
                navHtml += `<li class="page-item">
                    <a class="page-link" href="#" data-page="${pagination.currentPage - 1}">
                        <i class="fa fa-chevron-left"></i> Previous
                    </a>
                </li>`;
            } else {
                navHtml += `<li class="page-item disabled">
                    <span class="page-link">
                        <i class="fa fa-chevron-left"></i> Previous
                    </span>
                </li>`;
            }

            // Page numbers
            const startPage = Math.max(1, pagination.currentPage - 2);
            const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);

            if (startPage > 1) {
                navHtml += `<li class="page-item"><a class="page-link" href="#" data-page="1">1</a></li>`;
                if (startPage > 2) {
                    navHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
            }

            for (let i = startPage; i <= endPage; i++) {
                if (i === pagination.currentPage) {
                    navHtml += `<li class="page-item active">
                        <span class="page-link">${i}</span>
                    </li>`;
                } else {
                    navHtml += `<li class="page-item">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>`;
                }
            }

            if (endPage < pagination.totalPages) {
                if (endPage < pagination.totalPages - 1) {
                    navHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                navHtml += `<li class="page-item"><a class="page-link" href="#" data-page="${pagination.totalPages}">${pagination.totalPages}</a></li>`;
            }

            // Next button
            if (pagination.hasNext) {
                navHtml += `<li class="page-item">
                    <a class="page-link" href="#" data-page="${pagination.currentPage + 1}">
                        Next <i class="fa fa-chevron-right"></i>
                    </a>
                </li>`;
            } else {
                navHtml += `<li class="page-item disabled">
                    <span class="page-link">
                        Next <i class="fa fa-chevron-right"></i>
                    </span>
                </li>`;
            }

            $('#paginationNav').html(navHtml);
        }

        function submitLinks() {
            const links = [];
            let hasValidLink = false;

            $('.link-input-item').each(function(index) {
                const title = $(this).find('input[name*="Title"]').val().trim();
                const url = $(this).find('input[name*="Url"]').val().trim();

                if (title && url) {
                    links.push({ title: title, url: url });
                    hasValidLink = true;
                }
            });

            if (!hasValidLink) {
                showError('Please enter at least one valid link with both title and URL.');
                return;
            }

            // Show loading state
            const submitBtn = $('#linksForm button[type="submit"]');
            const originalText = submitBtn.html();
            submitBtn.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Submitting...');

            $.ajax({
                url: '/SpecialLinks/CreateLinks',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(links),
                success: function(response) {
                    if (response.success) {
                        showSuccess(response.message);
                        $('#linksForm')[0].reset();
                        $('#linksContainer').html(`
                            <div class="link-input-item mb-4 p-4 border rounded bg-light">
                                <div class="link-set-header mb-3">
                                    <h6 class="text-primary mb-0">
                                        <i class="fa fa-link"></i> Link Set #1
                                    </h6>
                                    <hr class="my-2">
                                </div>
                                <div class="row">
                                    <div class="col-12 mb-3">
                                        <label for="title_0" class="form-label">Title:</label>
                                        <input type="text" class="form-control" id="title_0" name="links[0].Title" placeholder="Enter link title" required>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label for="url_0" class="form-label">URL:</label>
                                        <input type="url" class="form-control" id="url_0" name="links[0].Url" placeholder="https://example.com" required>
                                    </div>
                                    <div class="col-12 text-right">
                                        <button type="button" class="btn btn-danger btn-sm remove-link" style="display: none;">
                                            <i class="fa fa-trash"></i> Remove Set
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `);
                        linkCounter = 0;
                        updateRemoveButtons();
                        loadExistingLinks(1);
                    } else {
                        showError(response.message);
                    }
                },
                error: function(xhr) {
                    let errorMessage = 'An error occurred while submitting links.';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMessage = xhr.responseJSON.message;
                    }
                    showError(errorMessage);
                },
                complete: function() {
                    submitBtn.prop('disabled', false).html(originalText);
                }
            });
        }


        function showSuccess(message) {
            $('#successMessage').text(message);
            $('#successModal').modal('show');
        }

        function showError(message) {
            $('#errorMessage').text(message);
            $('#errorModal').modal('show');
        }

        function escapeHtml(text) {
            const map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#039;'
            };
            return text.replace(/[&<>"']/g, function(m) { return map[m]; });
        }
    </script>
}
